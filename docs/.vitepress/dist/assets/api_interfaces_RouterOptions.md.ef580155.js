import{_ as e,o as a,p as t,W as s}from"./plugin-vue_export-helper.463a469f.js";const f='{"title":"Interface: RouterOptions","description":"","frontmatter":{"sidebar":"auto","editLinks":false,"sidebarDepth":3},"headers":[{"level":2,"title":"Hierarchy","slug":"hierarchy"},{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"end","slug":"end"},{"level":3,"title":"history","slug":"history"},{"level":3,"title":"linkActiveClass","slug":"linkactiveclass"},{"level":3,"title":"linkExactActiveClass","slug":"linkexactactiveclass"},{"level":3,"title":"parseQuery","slug":"parsequery"},{"level":3,"title":"routes","slug":"routes"},{"level":3,"title":"scrollBehavior","slug":"scrollbehavior"},{"level":3,"title":"sensitive","slug":"sensitive"},{"level":3,"title":"strict","slug":"strict"},{"level":3,"title":"stringifyQuery","slug":"stringifyquery"}],"relativePath":"api/interfaces/RouterOptions.md","lastUpdated":1665388136064}',n={},o=s(`<p><a href="./../">API Documentation</a> / RouterOptions</p><h1 id="interface-routeroptions" tabindex="-1">Interface: RouterOptions <a class="header-anchor" href="#interface-routeroptions" aria-hidden="true">#</a></h1><p>Options to initialize a <a href="./Router.html">Router</a> instance.</p><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a></h2><ul><li><p><a href="./../#pathparseroptions"><code>PathParserOptions</code></a></p><p>\u21B3 <strong><code>RouterOptions</code></strong></p></li></ul><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="end" tabindex="-1">end <a class="header-anchor" href="#end" aria-hidden="true">#</a></h3><p>\u2022 <code>Optional</code> <strong>end</strong>: <code>boolean</code></p><p>Should the RegExp match until the end by appending a <code>$</code> to it.</p><p><strong><code>Default Value</code></strong></p><p><code>true</code></p><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a></h4><p>PathParserOptions.end</p><hr><h3 id="history" tabindex="-1">history <a class="header-anchor" href="#history" aria-hidden="true">#</a></h3><p>\u2022 <strong>history</strong>: <a href="./RouterHistory.html"><code>RouterHistory</code></a></p><p>History implementation used by the router. Most web applications should use <code>createWebHistory</code> but it requires the server to be properly configured. You can also use a <em>hash</em> based history with <code>createWebHashHistory</code> that does not require any configuration on the server but isn&#39;t handled at all by search engines and does poorly on SEO.</p><p><strong><code>Example</code></strong></p><div class="language-js"><pre><code><span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">// other options...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><hr><h3 id="linkactiveclass" tabindex="-1">linkActiveClass <a class="header-anchor" href="#linkactiveclass" aria-hidden="true">#</a></h3><p>\u2022 <code>Optional</code> <strong>linkActiveClass</strong>: <code>string</code></p><p>Default class applied to active <a href="./../#routerlink">RouterLink</a>. If none is provided, <code>router-link-active</code> will be applied.</p><hr><h3 id="linkexactactiveclass" tabindex="-1">linkExactActiveClass <a class="header-anchor" href="#linkexactactiveclass" aria-hidden="true">#</a></h3><p>\u2022 <code>Optional</code> <strong>linkExactActiveClass</strong>: <code>string</code></p><p>Default class applied to exact active <a href="./../#routerlink">RouterLink</a>. If none is provided, <code>router-link-exact-active</code> will be applied.</p><hr><h3 id="parsequery" tabindex="-1">parseQuery <a class="header-anchor" href="#parsequery" aria-hidden="true">#</a></h3><p>\u2022 <code>Optional</code> <strong>parseQuery</strong>:</p><p>Custom implementation to parse a query. See its counterpart, <a href="./RouterOptions.html#stringifyquery">stringifyQuery</a>.</p><p><strong><code>Example</code></strong></p><p>Let&#39;s say you want to use the <a href="https://github.com/ljharb/qs" target="_blank" rel="noopener noreferrer">qs package</a> to parse queries, you can provide both <code>parseQuery</code> and <code>stringifyQuery</code>:</p><div class="language-js"><pre><code><span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">&#39;qs&#39;</span>

<span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// other options...</span>
  <span class="token literal-property property">parseQuery</span><span class="token operator">:</span> qs<span class="token punctuation">.</span>parse<span class="token punctuation">,</span>
  <span class="token literal-property property">stringifyQuery</span><span class="token operator">:</span> qs<span class="token punctuation">.</span>stringify<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><hr><h3 id="routes" tabindex="-1">routes <a class="header-anchor" href="#routes" aria-hidden="true">#</a></h3><p>\u2022 <strong>routes</strong>: readonly <a href="./../#routerecordraw"><code>RouteRecordRaw</code></a>[]</p><p>Initial list of routes that should be added to the router.</p><hr><h3 id="scrollbehavior" tabindex="-1">scrollBehavior <a class="header-anchor" href="#scrollbehavior" aria-hidden="true">#</a></h3><p>\u2022 <code>Optional</code> <strong>scrollBehavior</strong>: <a href="./RouterScrollBehavior.html"><code>RouterScrollBehavior</code></a></p><p>Function to control scrolling when navigating between pages. Can return a Promise to delay scrolling. Check ScrollBehavior.</p><p><strong><code>Example</code></strong></p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">scrollBehavior</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> savedPosition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \`to\` and \`from\` are both route locations</span>
  <span class="token comment">// \`savedPosition\` can be null if there isn&#39;t one</span>
<span class="token punctuation">}</span>
</code></pre></div><hr><h3 id="sensitive" tabindex="-1">sensitive <a class="header-anchor" href="#sensitive" aria-hidden="true">#</a></h3><p>\u2022 <code>Optional</code> <strong>sensitive</strong>: <code>boolean</code></p><p>Makes the RegExp case-sensitive.</p><p><strong><code>Default Value</code></strong></p><p><code>false</code></p><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a></h4><p>PathParserOptions.sensitive</p><hr><h3 id="strict" tabindex="-1">strict <a class="header-anchor" href="#strict" aria-hidden="true">#</a></h3><p>\u2022 <code>Optional</code> <strong>strict</strong>: <code>boolean</code></p><p>Whether to disallow a trailing slash or not.</p><p><strong><code>Default Value</code></strong></p><p><code>false</code></p><h4 id="inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a></h4><p>PathParserOptions.strict</p><hr><h3 id="stringifyquery" tabindex="-1">stringifyQuery <a class="header-anchor" href="#stringifyquery" aria-hidden="true">#</a></h3><p>\u2022 <code>Optional</code> <strong>stringifyQuery</strong>:</p><p>Custom implementation to stringify a query object. Should not prepend a leading <code>?</code>. <a href="./RouterOptions.html#parsequery">parseQuery</a> counterpart to handle query parsing.</p>`,64),r=[o];function i(p,c,l,d,h,u){return a(),t("div",null,r)}var y=e(n,[["render",i]]);export{f as __pageData,y as default};
