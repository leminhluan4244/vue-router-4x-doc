import{_ as a,N as t,o as e,p,H as o,v as n,r as c,W as l}from"./plugin-vue_export-helper.463a469f.js";const y='{"title":"Named Views","description":"","frontmatter":{},"headers":[{"level":2,"title":"Nested Named Views","slug":"nested-named-views"}],"relativePath":"guide/essentials/named-views.md","lastUpdated":1665388136080}',i={},r=n("h1",{id:"named-views",tabindex:"-1"},[c("Named Views "),n("a",{class:"header-anchor",href:"#named-views","aria-hidden":"true"},"#")],-1),u=l(`<p>Sometimes you need to display multiple views at the same time instead of nesting them, e.g. creating a layout with a <code>sidebar</code> view and a <code>main</code> view. This is where named views come in handy. Instead of having one single outlet in your view, you can have multiple and give each of them a name. A <code>router-view</code> without a name will be given <code>default</code> as its name.</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>view left-sidebar<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LeftSidebar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>view main-content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>view right-sidebar<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RightSidebar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>A view is rendered by using a component, therefore multiple views require multiple components for the same route. Make sure to use the <code>components</code> (with an <strong>s</strong>) option:</p><div class="language-js"><pre><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token keyword">default</span><span class="token operator">:</span> Home<span class="token punctuation">,</span>
        <span class="token comment">// short for LeftSidebar: LeftSidebar</span>
        LeftSidebar<span class="token punctuation">,</span>
        <span class="token comment">// they match the \`name\` attribute on \`&lt;router-view&gt;\`</span>
        RightSidebar<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>A working demo of this example can be found <a href="https://codesandbox.io/s/named-views-vue-router-4-examples-rd20l" target="_blank" rel="noopener noreferrer">here</a>.</p><h2 id="nested-named-views" tabindex="-1">Nested Named Views <a class="header-anchor" href="#nested-named-views" aria-hidden="true">#</a></h2><p>It is possible to create complex layouts using named views with nested views. When doing so, you will also need to give nested <code>router-view</code> a name. Let&#39;s take a Settings panel example:</p><div class="language-"><pre><code>/settings/emails                                       /settings/profile
+-----------------------------------+                  +------------------------------+
| UserSettings                      |                  | UserSettings                 |
| +-----+-------------------------+ |                  | +-----+--------------------+ |
| | Nav | UserEmailsSubscriptions | |  +------------&gt;  | | Nav | UserProfile        | |
| |     +-------------------------+ |                  | |     +--------------------+ |
| |     |                         | |                  | |     | UserProfilePreview | |
| +-----+-------------------------+ |                  | +-----+--------------------+ |
+-----------------------------------+                  +------------------------------+
</code></pre></div><ul><li><code>Nav</code> is just a regular component</li><li><code>UserSettings</code> is the parent view component</li><li><code>UserEmailsSubscriptions</code>, <code>UserProfile</code>, <code>UserProfilePreview</code> are nested view components</li></ul><p><strong>Note</strong>: <em>Let&#39;s forget about how the HTML/CSS should look like to represent such layout and focus on the components used.</em></p><p>The <code>&lt;template&gt;</code> section for <code>UserSettings</code> component in the above layout would look something like this:</p><div class="language-html"><pre><code><span class="token comment">&lt;!-- UserSettings.vue --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>User Settings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavBar</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>helper<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Then you can achieve the layout above with this route configuration:</p><div class="language-js"><pre><code><span class="token punctuation">{</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/settings&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// You could also have named views at the top</span>
  <span class="token literal-property property">component</span><span class="token operator">:</span> UserSettings<span class="token punctuation">,</span>
  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;emails&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> UserEmailsSubscriptions
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;profile&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">default</span><span class="token operator">:</span> UserProfile<span class="token punctuation">,</span>
      <span class="token literal-property property">helper</span><span class="token operator">:</span> UserProfilePreview
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><p>A working demo of this example can be found <a href="https://codesandbox.io/s/nested-named-views-vue-router-4-examples-re9yl?&amp;initialpath=%2Fsettings%2Femails" target="_blank" rel="noopener noreferrer">here</a>.</p>`,15);function k(d,g,m,h,v,w){const s=t("VueSchoolLink");return e(),p("div",null,[r,o(s,{href:"https://vueschool.io/lessons/vue-router-4-named-views",title:"Learn how to use named views"}),u])}var _=a(i,[["render",k]]);export{y as __pageData,_ as default};
