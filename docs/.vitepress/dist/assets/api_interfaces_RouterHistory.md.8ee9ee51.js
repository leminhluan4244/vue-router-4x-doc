import{_ as e,o as t,p as a,W as r}from"./plugin-vue_export-helper.463a469f.js";const f='{"title":"Interface: RouterHistory","description":"","frontmatter":{"sidebar":"auto","editLinks":false,"sidebarDepth":3},"headers":[{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"base","slug":"base"},{"level":3,"title":"location","slug":"location"},{"level":3,"title":"state","slug":"state"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"createHref","slug":"createhref"},{"level":3,"title":"destroy","slug":"destroy"},{"level":3,"title":"go","slug":"go"},{"level":3,"title":"listen","slug":"listen"},{"level":3,"title":"push","slug":"push"},{"level":3,"title":"replace","slug":"replace"}],"relativePath":"api/interfaces/RouterHistory.md","lastUpdated":1665388136064}',o={},s=r(`<p><a href="./../">API Documentation</a> / RouterHistory</p><h1 id="interface-routerhistory" tabindex="-1">Interface: RouterHistory <a class="header-anchor" href="#interface-routerhistory" aria-hidden="true">#</a></h1><p>Interface implemented by History implementations that can be passed to the router as Router.history</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="base" tabindex="-1">base <a class="header-anchor" href="#base" aria-hidden="true">#</a></h3><p>\u2022 <code>Readonly</code> <strong>base</strong>: <code>string</code></p><p>Base path that is prepended to every url. This allows hosting an SPA at a sub-folder of a domain like <code>example.com/sub-folder</code> by having a <code>base</code> of <code>/sub-folder</code></p><hr><h3 id="location" tabindex="-1">location <a class="header-anchor" href="#location" aria-hidden="true">#</a></h3><p>\u2022 <code>Readonly</code> <strong>location</strong>: <code>string</code></p><p>Current History location</p><hr><h3 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-hidden="true">#</a></h3><p>\u2022 <code>Readonly</code> <strong>state</strong>: <a href="./HistoryState.html"><code>HistoryState</code></a></p><p>Current History state</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="createhref" tabindex="-1">createHref <a class="header-anchor" href="#createhref" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createHref</strong>(<code>location</code>): <code>string</code></p><p>Generates the corresponding href to be used in an anchor tag.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>location</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">history location that should create an href</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>string</code></p><hr><h3 id="destroy" tabindex="-1">destroy <a class="header-anchor" href="#destroy" aria-hidden="true">#</a></h3><p>\u25B8 <strong>destroy</strong>(): <code>void</code></p><p>Clears any event listener attached by the history implementation.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>void</code></p><hr><h3 id="go" tabindex="-1">go <a class="header-anchor" href="#go" aria-hidden="true">#</a></h3><p>\u25B8 <strong>go</strong>(<code>delta</code>, <code>triggerListeners?</code>): <code>void</code></p><p>Traverses history in a given direction.</p><p><strong><code>Example</code></strong></p><div class="language-js"><pre><code>myHistory<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// equivalent to window.history.back()</span>
myHistory<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// equivalent to window.history.forward()</span>
</code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>delta</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">distance to travel. If delta is &lt; 0, it will go back, if it&#39;s &gt; 0, it will go forward by that amount of entries.</td></tr><tr><td style="text-align:left;"><code>triggerListeners?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">whether this should trigger listeners attached to the history</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>void</code></p><hr><h3 id="listen" tabindex="-1">listen <a class="header-anchor" href="#listen" aria-hidden="true">#</a></h3><p>\u25B8 <strong>listen</strong>(<code>callback</code>): () =&gt; <code>void</code></p><p>Attach a listener to the History implementation that is triggered when the navigation is triggered from outside (like the Browser back and forward buttons) or when passing <code>true</code> to RouterHistory.back and RouterHistory.forward</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><code>NavigationCallback</code></td><td style="text-align:left;">listener to attach</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><code>fn</code></p><p>a callback to remove the listener</p><p>\u25B8 (): <code>void</code></p><p>Attach a listener to the History implementation that is triggered when the navigation is triggered from outside (like the Browser back and forward buttons) or when passing <code>true</code> to RouterHistory.back and RouterHistory.forward</p><h5 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h5><p><code>void</code></p><p>a callback to remove the listener</p><hr><h3 id="push" tabindex="-1">push <a class="header-anchor" href="#push" aria-hidden="true">#</a></h3><p>\u25B8 <strong>push</strong>(<code>to</code>, <code>data?</code>): <code>void</code></p><p>Navigates to a location. In the case of an HTML5 History implementation, this will call <code>history.pushState</code> to effectively change the URL.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>to</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">location to push</td></tr><tr><td style="text-align:left;"><code>data?</code></td><td style="text-align:left;"><a href="./HistoryState.html"><code>HistoryState</code></a></td><td style="text-align:left;">optional <a href="./HistoryState.html">HistoryState</a> to be associated with the navigation entry</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-hidden="true">#</a></h4><p><code>void</code></p><hr><h3 id="replace" tabindex="-1">replace <a class="header-anchor" href="#replace" aria-hidden="true">#</a></h3><p>\u25B8 <strong>replace</strong>(<code>to</code>, <code>data?</code>): <code>void</code></p><p>Same as <a href="./RouterHistory.html#push">push</a> but performs a <code>history.replaceState</code> instead of <code>history.pushState</code></p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>to</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">location to set</td></tr><tr><td style="text-align:left;"><code>data?</code></td><td style="text-align:left;"><a href="./HistoryState.html"><code>HistoryState</code></a></td><td style="text-align:left;">optional <a href="./HistoryState.html">HistoryState</a> to be associated with the navigation entry</td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-hidden="true">#</a></h4><p><code>void</code></p>`,69),d=[s];function i(n,l,h,c,p,u){return t(),a("div",null,d)}var y=e(o,[["render",i]]);export{f as __pageData,y as default};
