import{_ as e,o as t,p as a,W as o}from"./plugin-vue_export-helper.463a469f.js";const g='{"title":"API Documentation","description":"","frontmatter":{"sidebar":"auto","editLinks":false,"sidebarDepth":3},"headers":[{"level":2,"title":"Enumerations","slug":"enumerations"},{"level":2,"title":"Interfaces","slug":"interfaces"},{"level":2,"title":"Type Aliases","slug":"type-aliases"},{"level":3,"title":"LocationQuery","slug":"locationquery"},{"level":3,"title":"LocationQueryRaw","slug":"locationqueryraw"},{"level":3,"title":"PathParserOptions","slug":"pathparseroptions"},{"level":3,"title":"RouteComponent","slug":"routecomponent"},{"level":3,"title":"RouteLocationRaw","slug":"routelocationraw"},{"level":3,"title":"RouteParams","slug":"routeparams"},{"level":3,"title":"RouteParamsRaw","slug":"routeparamsraw"},{"level":3,"title":"RouteRecord","slug":"routerecord"},{"level":3,"title":"RouteRecordName","slug":"routerecordname"},{"level":3,"title":"RouteRecordRaw","slug":"routerecordraw"},{"level":3,"title":"UseLinkOptions","slug":"uselinkoptions"},{"level":2,"title":"Variables","slug":"variables"},{"level":3,"title":"RouterLink","slug":"routerlink"},{"level":3,"title":"RouterView","slug":"routerview"},{"level":3,"title":"START_LOCATION","slug":"start-location"},{"level":2,"title":"Functions","slug":"functions"},{"level":3,"title":"createMemoryHistory","slug":"creatememoryhistory"},{"level":3,"title":"createRouter","slug":"createrouter"},{"level":3,"title":"createWebHashHistory","slug":"createwebhashhistory"},{"level":3,"title":"createWebHistory","slug":"createwebhistory"},{"level":3,"title":"isNavigationFailure","slug":"isnavigationfailure"},{"level":3,"title":"loadRouteLocation","slug":"loadroutelocation"},{"level":3,"title":"onBeforeRouteLeave","slug":"onbeforerouteleave"},{"level":3,"title":"onBeforeRouteUpdate","slug":"onbeforerouteupdate"},{"level":3,"title":"useLink","slug":"uselink"},{"level":3,"title":"useRoute","slug":"useroute"},{"level":3,"title":"useRouter","slug":"userouter"}],"relativePath":"api/index.md","lastUpdated":1665388136049}',n={},r=o(`<h1 id="api-documentation" tabindex="-1">API Documentation <a class="header-anchor" href="#api-documentation" aria-hidden="true">#</a></h1><h2 id="enumerations" tabindex="-1">Enumerations <a class="header-anchor" href="#enumerations" aria-hidden="true">#</a></h2><ul><li><a href="./enums/NavigationFailureType.html">NavigationFailureType</a></li></ul><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-hidden="true">#</a></h2><ul><li><a href="./interfaces/HistoryState.html">HistoryState</a></li><li><a href="./interfaces/NavigationFailure.html">NavigationFailure</a></li><li><a href="./interfaces/NavigationGuard.html">NavigationGuard</a></li><li><a href="./interfaces/NavigationGuardNext.html">NavigationGuardNext</a></li><li><a href="./interfaces/NavigationGuardWithThis.html">NavigationGuardWithThis</a></li><li><a href="./interfaces/NavigationHookAfter.html">NavigationHookAfter</a></li><li><a href="./interfaces/RouteLocation.html">RouteLocation</a></li><li><a href="./interfaces/RouteLocationMatched.html">RouteLocationMatched</a></li><li><a href="./interfaces/RouteLocationNormalized.html">RouteLocationNormalized</a></li><li><a href="./interfaces/RouteLocationNormalizedLoaded.html">RouteLocationNormalizedLoaded</a></li><li><a href="./interfaces/RouteLocationOptions.html">RouteLocationOptions</a></li><li><a href="./interfaces/RouteMeta.html">RouteMeta</a></li><li><a href="./interfaces/RouteRecordNormalized.html">RouteRecordNormalized</a></li><li><a href="./interfaces/Router.html">Router</a></li><li><a href="./interfaces/RouterHistory.html">RouterHistory</a></li><li><a href="./interfaces/RouterLinkProps.html">RouterLinkProps</a></li><li><a href="./interfaces/RouterOptions.html">RouterOptions</a></li><li><a href="./interfaces/RouterScrollBehavior.html">RouterScrollBehavior</a></li><li><a href="./interfaces/RouterViewProps.html">RouterViewProps</a></li></ul><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-hidden="true">#</a></h2><h3 id="locationquery" tabindex="-1">LocationQuery <a class="header-anchor" href="#locationquery" aria-hidden="true">#</a></h3><p>\u01AC <strong>LocationQuery</strong>: <code>Record</code>&lt;<code>string</code>, <code>LocationQueryValue</code> | <code>LocationQueryValue</code>[]&gt;</p><p>Normalized query object that appears in <a href="./interfaces/RouteLocationNormalized.html">RouteLocationNormalized</a></p><hr><h3 id="locationqueryraw" tabindex="-1">LocationQueryRaw <a class="header-anchor" href="#locationqueryraw" aria-hidden="true">#</a></h3><p>\u01AC <strong>LocationQueryRaw</strong>: <code>Record</code>&lt;<code>string</code> | <code>number</code>, <code>LocationQueryValueRaw</code> | <code>LocationQueryValueRaw</code>[]&gt;</p><p>Loose <a href="./#locationquery">LocationQuery</a> object that can be passed to functions like <a href="./interfaces/Router.html#push">push</a> and <a href="./interfaces/Router.html#replace">replace</a> or anywhere when creating a <a href="./#routelocationraw">RouteLocationRaw</a></p><hr><h3 id="pathparseroptions" tabindex="-1">PathParserOptions <a class="header-anchor" href="#pathparseroptions" aria-hidden="true">#</a></h3><p>\u01AC <strong>PathParserOptions</strong>: <code>Pick</code>&lt;<code>_PathParserOptions</code>, <code>&quot;end&quot;</code> | <code>&quot;sensitive&quot;</code> | <code>&quot;strict&quot;</code>&gt;</p><hr><h3 id="routecomponent" tabindex="-1">RouteComponent <a class="header-anchor" href="#routecomponent" aria-hidden="true">#</a></h3><p>\u01AC <strong>RouteComponent</strong>: <code>Component</code> | <code>DefineComponent</code></p><p>Allowed Component in <a href="./interfaces/RouteLocationMatched.html">RouteLocationMatched</a></p><hr><h3 id="routelocationraw" tabindex="-1">RouteLocationRaw <a class="header-anchor" href="#routelocationraw" aria-hidden="true">#</a></h3><p>\u01AC <strong>RouteLocationRaw</strong>: <code>string</code> | <code>RouteLocationPathRaw</code> | <code>RouteLocationNamedRaw</code></p><p>User-level route location</p><hr><h3 id="routeparams" tabindex="-1">RouteParams <a class="header-anchor" href="#routeparams" aria-hidden="true">#</a></h3><p>\u01AC <strong>RouteParams</strong>: <code>Record</code>&lt;<code>string</code>, <code>RouteParamValue</code> | <code>RouteParamValue</code>[]&gt;</p><hr><h3 id="routeparamsraw" tabindex="-1">RouteParamsRaw <a class="header-anchor" href="#routeparamsraw" aria-hidden="true">#</a></h3><p>\u01AC <strong>RouteParamsRaw</strong>: <code>Record</code>&lt;<code>string</code>, <code>RouteParamValueRaw</code> | <code>Exclude</code>&lt;<code>RouteParamValueRaw</code>, <code>null</code> | <code>undefined</code>&gt;[]&gt;</p><hr><h3 id="routerecord" tabindex="-1">RouteRecord <a class="header-anchor" href="#routerecord" aria-hidden="true">#</a></h3><p>\u01AC <strong>RouteRecord</strong>: <a href="./interfaces/RouteRecordNormalized.html"><code>RouteRecordNormalized</code></a></p><p>Normalized version of a <a href="./#routerecord">route record</a>.</p><hr><h3 id="routerecordname" tabindex="-1">RouteRecordName <a class="header-anchor" href="#routerecordname" aria-hidden="true">#</a></h3><p>\u01AC <strong>RouteRecordName</strong>: <code>string</code> | <code>symbol</code></p><p>Possible values for a user-defined route record&#39;s name</p><hr><h3 id="routerecordraw" tabindex="-1">RouteRecordRaw <a class="header-anchor" href="#routerecordraw" aria-hidden="true">#</a></h3><p>\u01AC <strong>RouteRecordRaw</strong>: <code>RouteRecordSingleView</code> | <code>RouteRecordSingleViewWithChildren</code> | <code>RouteRecordMultipleViews</code> | <code>RouteRecordMultipleViewsWithChildren</code> | <code>RouteRecordRedirect</code></p><hr><h3 id="uselinkoptions" tabindex="-1">UseLinkOptions <a class="header-anchor" href="#uselinkoptions" aria-hidden="true">#</a></h3><p>\u01AC <strong>UseLinkOptions</strong>: <code>VueUseOptions</code>&lt;<code>RouterLinkOptions</code>&gt;</p><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h2><h3 id="routerlink" tabindex="-1">RouterLink <a class="header-anchor" href="#routerlink" aria-hidden="true">#</a></h3><p>\u2022 <code>Const</code> <strong>RouterLink</strong>: <code>_RouterLinkI</code></p><p>Component to render a link that triggers a navigation on click.</p><hr><h3 id="routerview" tabindex="-1">RouterView <a class="header-anchor" href="#routerview" aria-hidden="true">#</a></h3><p>\u2022 <code>Const</code> <strong>RouterView</strong>: () =&gt; { <code>$props</code>: <code>AllowedComponentProps</code> &amp; <code>ComponentCustomProps</code> &amp; <code>VNodeProps</code> &amp; <a href="./interfaces/RouterViewProps.html"><code>RouterViewProps</code></a> ; <code>$slots</code>: { <code>default</code>: (<code>arg</code>: { <code>Component</code>: <code>VNode</code>&lt;<code>RendererNode</code>, <code>RendererElement</code>, { <code>[key: string]</code>: <code>any</code>; }&gt; ; <code>route</code>: <a href="./interfaces/RouteLocationNormalizedLoaded.html"><code>RouteLocationNormalizedLoaded</code></a> }) =&gt; <code>VNode</code>&lt;<code>RendererNode</code>, <code>RendererElement</code>, { <code>[key: string]</code>: <code>any</code>; }&gt;[] } }</p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a></h4><p>\u2022 <strong>new RouterView</strong>()</p><p>Component to display the current route the user is at.</p><hr><h3 id="start-location" tabindex="-1">START_LOCATION <a class="header-anchor" href="#start-location" aria-hidden="true">#</a></h3><p>\u2022 <code>Const</code> <strong>START_LOCATION</strong>: <a href="./interfaces/RouteLocationNormalizedLoaded.html"><code>RouteLocationNormalizedLoaded</code></a></p><p>Initial route location where the router is. Can be used in navigation guards to differentiate the initial navigation.</p><p><strong><code>Example</code></strong></p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">START_LOCATION</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>

router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>from <span class="token operator">===</span> <span class="token constant">START_LOCATION</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// initial navigation</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h2><h3 id="creatememoryhistory" tabindex="-1">createMemoryHistory <a class="header-anchor" href="#creatememoryhistory" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createMemoryHistory</strong>(<code>base?</code>): <a href="./interfaces/RouterHistory.html"><code>RouterHistory</code></a></p><p>Creates an in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere. It&#39;s up to the user to replace that location with the starter location by either calling <code>router.push</code> or <code>router.replace</code>.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>base</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&#39;&#39;</code></td><td style="text-align:left;">Base applied to all urls, defaults to &#39;/&#39;</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><a href="./interfaces/RouterHistory.html"><code>RouterHistory</code></a></p><p>a history object that can be passed to the router constructor</p><hr><h3 id="createrouter" tabindex="-1">createRouter <a class="header-anchor" href="#createrouter" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createRouter</strong>(<code>options</code>): <a href="./interfaces/Router.html"><code>Router</code></a></p><p>Creates a Router instance that can be used by a Vue app.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>options</code></td><td style="text-align:left;"><a href="./interfaces/RouterOptions.html"><code>RouterOptions</code></a></td><td style="text-align:left;"><a href="./interfaces/RouterOptions.html">RouterOptions</a></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><a href="./interfaces/Router.html"><code>Router</code></a></p><hr><h3 id="createwebhashhistory" tabindex="-1">createWebHashHistory <a class="header-anchor" href="#createwebhashhistory" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createWebHashHistory</strong>(<code>base?</code>): <a href="./interfaces/RouterHistory.html"><code>RouterHistory</code></a></p><p>Creates a hash history. Useful for web applications with no host (e.g. <code>file://</code>) or when configuring a server to handle any URL is not possible.</p><p><strong><code>Example</code></strong></p><div class="language-js"><pre><code><span class="token comment">// at https://example.com/folder</span>
<span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// gives a url of \`https://example.com/folder#\`</span>
<span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token string">&#39;/folder/&#39;</span><span class="token punctuation">)</span> <span class="token comment">// gives a url of \`https://example.com/folder/#\`</span>
<span class="token comment">// if the \`#\` is provided in the base, it won&#39;t be added by \`createWebHashHistory\`</span>
<span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token string">&#39;/folder/#/app/&#39;</span><span class="token punctuation">)</span> <span class="token comment">// gives a url of \`https://example.com/folder/#/app/\`</span>
<span class="token comment">// you should avoid doing this because it changes the original url and breaks copying urls</span>
<span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token string">&#39;/other-folder/&#39;</span><span class="token punctuation">)</span> <span class="token comment">// gives a url of \`https://example.com/other-folder/#\`</span>

<span class="token comment">// at file:///usr/etc/folder/index.html</span>
<span class="token comment">// for locations with no \`host\`, the base is ignored</span>
<span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token string">&#39;/iAmIgnored&#39;</span><span class="token punctuation">)</span> <span class="token comment">// gives a url of \`file:///usr/etc/folder/index.html#\`</span>
</code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>base?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">optional base to provide. Defaults to <code>location.pathname + location.search</code> If there is a <code>&lt;base&gt;</code> tag in the <code>head</code>, its value will be ignored in favor of this parameter <strong>but note it affects all the history.pushState() calls</strong>, meaning that if you use a <code>&lt;base&gt;</code> tag, it&#39;s <code>href</code> value <strong>has to match this parameter</strong> (ignoring anything after the <code>#</code>).</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><a href="./interfaces/RouterHistory.html"><code>RouterHistory</code></a></p><hr><h3 id="createwebhistory" tabindex="-1">createWebHistory <a class="header-anchor" href="#createwebhistory" aria-hidden="true">#</a></h3><p>\u25B8 <strong>createWebHistory</strong>(<code>base?</code>): <a href="./interfaces/RouterHistory.html"><code>RouterHistory</code></a></p><p>Creates an HTML5 history. Most common history for single page applications.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>base?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-hidden="true">#</a></h4><p><a href="./interfaces/RouterHistory.html"><code>RouterHistory</code></a></p><hr><h3 id="isnavigationfailure" tabindex="-1">isNavigationFailure <a class="header-anchor" href="#isnavigationfailure" aria-hidden="true">#</a></h3><p>\u25B8 <strong>isNavigationFailure</strong>(<code>error</code>, <code>type?</code>): error is NavigationRedirectError</p><p>Check if an object is a <a href="./interfaces/NavigationFailure.html">NavigationFailure</a>.</p><p><strong><code>Example</code></strong></p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isNavigationFailure<span class="token punctuation">,</span> NavigationFailureType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>

router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> failure</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Any kind of navigation failure</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNavigationFailure</span><span class="token punctuation">(</span>failure<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Only duplicated navigations</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNavigationFailure</span><span class="token punctuation">(</span>failure<span class="token punctuation">,</span> NavigationFailureType<span class="token punctuation">.</span>duplicated<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Aborted or canceled navigations</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNavigationFailure</span><span class="token punctuation">(</span>failure<span class="token punctuation">,</span> NavigationFailureType<span class="token punctuation">.</span>aborted <span class="token operator">|</span> NavigationFailureType<span class="token punctuation">.</span>canceled<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>error</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">possible <a href="./interfaces/NavigationFailure.html">NavigationFailure</a></td></tr><tr><td style="text-align:left;"><code>type?</code></td><td style="text-align:left;"><code>NAVIGATION_GUARD_REDIRECT</code></td><td style="text-align:left;">optional types to check for</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-hidden="true">#</a></h4><p>error is NavigationRedirectError</p><p>\u25B8 <strong>isNavigationFailure</strong>(<code>error</code>, <code>type?</code>): error is NavigationFailure</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>error</code></td><td style="text-align:left;"><code>any</code></td></tr><tr><td style="text-align:left;"><code>type?</code></td><td style="text-align:left;"><code>ErrorTypes</code> | <a href="./enums/NavigationFailureType.html"><code>NavigationFailureType</code></a></td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-hidden="true">#</a></h4><p>error is NavigationFailure</p><hr><h3 id="loadroutelocation" tabindex="-1">loadRouteLocation <a class="header-anchor" href="#loadroutelocation" aria-hidden="true">#</a></h3><p>\u25B8 <strong>loadRouteLocation</strong>(<code>route</code>): <code>Promise</code>&lt;<a href="./interfaces/RouteLocationNormalizedLoaded.html"><code>RouteLocationNormalizedLoaded</code></a>&gt;</p><p>Ensures a route is loaded, so it can be passed as o prop to <code>&lt;RouterView&gt;</code>.</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>route</code></td><td style="text-align:left;"><a href="./interfaces/RouteLocationNormalized.html"><code>RouteLocationNormalized</code></a></td><td style="text-align:left;">resolved route to load</td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-hidden="true">#</a></h4><p><code>Promise</code>&lt;<a href="./interfaces/RouteLocationNormalizedLoaded.html"><code>RouteLocationNormalizedLoaded</code></a>&gt;</p><hr><h3 id="onbeforerouteleave" tabindex="-1">onBeforeRouteLeave <a class="header-anchor" href="#onbeforerouteleave" aria-hidden="true">#</a></h3><p>\u25B8 <strong>onBeforeRouteLeave</strong>(<code>leaveGuard</code>): <code>void</code></p><p>Add a navigation guard that triggers whenever the component for the current location is about to be left. Similar to beforeRouteLeave but can be used in any component. The guard is removed when the component is unmounted.</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>leaveGuard</code></td><td style="text-align:left;"><a href="./interfaces/NavigationGuard.html"><code>NavigationGuard</code></a></td><td style="text-align:left;"><a href="./interfaces/NavigationGuard.html">NavigationGuard</a></td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-hidden="true">#</a></h4><p><code>void</code></p><hr><h3 id="onbeforerouteupdate" tabindex="-1">onBeforeRouteUpdate <a class="header-anchor" href="#onbeforerouteupdate" aria-hidden="true">#</a></h3><p>\u25B8 <strong>onBeforeRouteUpdate</strong>(<code>updateGuard</code>): <code>void</code></p><p>Add a navigation guard that triggers whenever the current location is about to be updated. Similar to beforeRouteUpdate but can be used in any component. The guard is removed when the component is unmounted.</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>updateGuard</code></td><td style="text-align:left;"><a href="./interfaces/NavigationGuard.html"><code>NavigationGuard</code></a></td><td style="text-align:left;"><a href="./interfaces/NavigationGuard.html">NavigationGuard</a></td></tr></tbody></table><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-hidden="true">#</a></h4><p><code>void</code></p><hr><h3 id="uselink" tabindex="-1">useLink <a class="header-anchor" href="#uselink" aria-hidden="true">#</a></h3><p>\u25B8 <strong>useLink</strong>(<code>props</code>): <code>Object</code></p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>props</code></td><td style="text-align:left;"><code>VueUseOptions</code>&lt;<code>RouterLinkOptions</code>&gt;</td></tr></tbody></table><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-hidden="true">#</a></h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>href</code></td><td style="text-align:left;"><code>ComputedRef</code>&lt;<code>string</code>&gt;</td></tr><tr><td style="text-align:left;"><code>isActive</code></td><td style="text-align:left;"><code>ComputedRef</code>&lt;<code>boolean</code>&gt;</td></tr><tr><td style="text-align:left;"><code>isExactActive</code></td><td style="text-align:left;"><code>ComputedRef</code>&lt;<code>boolean</code>&gt;</td></tr><tr><td style="text-align:left;"><code>navigate</code></td><td style="text-align:left;">(<code>e</code>: <code>MouseEvent</code>) =&gt; <code>Promise</code>&lt;<code>void</code> | <a href="./interfaces/NavigationFailure.html"><code>NavigationFailure</code></a>&gt;</td></tr><tr><td style="text-align:left;"><code>route</code></td><td style="text-align:left;"><code>ComputedRef</code>&lt;<a href="./interfaces/RouteLocation.html"><code>RouteLocation</code></a> &amp; { <code>href</code>: <code>string</code> }&gt;</td></tr></tbody></table><hr><h3 id="useroute" tabindex="-1">useRoute <a class="header-anchor" href="#useroute" aria-hidden="true">#</a></h3><p>\u25B8 <strong>useRoute</strong>(): <a href="./interfaces/RouteLocationNormalizedLoaded.html"><code>RouteLocationNormalizedLoaded</code></a></p><p>Returns the current route location. Equivalent to using <code>$route</code> inside templates.</p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-hidden="true">#</a></h4><p><a href="./interfaces/RouteLocationNormalizedLoaded.html"><code>RouteLocationNormalizedLoaded</code></a></p><hr><h3 id="userouter" tabindex="-1">useRouter <a class="header-anchor" href="#userouter" aria-hidden="true">#</a></h3><p>\u25B8 <strong>useRouter</strong>(): <a href="./interfaces/Router.html"><code>Router</code></a></p><p>Returns the router instance. Equivalent to using <code>$router</code> inside templates.</p><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-hidden="true">#</a></h4><p><a href="./interfaces/Router.html"><code>Router</code></a></p>`,154),s=[r];function i(d,c,l,h,u,p){return t(),a("div",null,s)}var m=e(n,[["render",i]]);export{g as __pageData,m as default};
