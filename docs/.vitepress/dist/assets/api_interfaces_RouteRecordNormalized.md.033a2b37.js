import{_ as n,o as a,p as d,v as e,W as r,r as o}from"./plugin-vue_export-helper.463a469f.js";const P='{"title":"Interface: RouteRecordNormalized","description":"","frontmatter":{"sidebar":"auto","editLinks":false,"sidebarDepth":3},"headers":[{"level":2,"title":"Hierarchy","slug":"hierarchy"},{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"aliasOf","slug":"aliasof"},{"level":3,"title":"beforeEnter","slug":"beforeenter"},{"level":3,"title":"children","slug":"children"},{"level":3,"title":"components","slug":"components"},{"level":3,"title":"instances","slug":"instances"},{"level":3,"title":"meta","slug":"meta"},{"level":3,"title":"name","slug":"name"},{"level":3,"title":"path","slug":"path"},{"level":3,"title":"props","slug":"props"},{"level":3,"title":"redirect","slug":"redirect"}],"relativePath":"api/interfaces/RouteRecordNormalized.md","lastUpdated":1665388136064}',i={},c=r('<p><a href="./../">API Documentation</a> / RouteRecordNormalized</p><h1 id="interface-routerecordnormalized" tabindex="-1">Interface: RouteRecordNormalized <a class="header-anchor" href="#interface-routerecordnormalized" aria-hidden="true">#</a></h1><p>Normalized version of a <a href="./../#routerecord">route record</a>.</p><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a></h2><ul><li><p><strong><code>RouteRecordNormalized</code></strong></p><p>\u21B3 <a href="./RouteLocationMatched.html"><code>RouteLocationMatched</code></a></p></li></ul><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="aliasof" tabindex="-1">aliasOf <a class="header-anchor" href="#aliasof" aria-hidden="true">#</a></h3><p>\u2022 <strong>aliasOf</strong>: <code>undefined</code> | <a href="./RouteRecordNormalized.html"><code>RouteRecordNormalized</code></a></p><p>Defines if this record is the alias of another one. This property is <code>undefined</code> if the record is the original one.</p><hr><h3 id="beforeenter" tabindex="-1">beforeEnter <a class="header-anchor" href="#beforeenter" aria-hidden="true">#</a></h3><p>\u2022 <strong>beforeEnter</strong>: <code>undefined</code> | <a href="./NavigationGuardWithThis.html"><code>NavigationGuardWithThis</code></a>&lt;<code>undefined</code>&gt; | <a href="./NavigationGuardWithThis.html"><code>NavigationGuardWithThis</code></a>&lt;<code>undefined</code>&gt;[]</p><p>Registered beforeEnter guards</p><hr><h3 id="children" tabindex="-1">children <a class="header-anchor" href="#children" aria-hidden="true">#</a></h3><p>\u2022 <strong>children</strong>: <a href="./../#routerecordraw"><code>RouteRecordRaw</code></a>[]</p><p>Nested route records.</p><hr><h3 id="components" tabindex="-1">components <a class="header-anchor" href="#components" aria-hidden="true">#</a></h3><p>\u2022 <strong>components</strong>: <code>undefined</code> | <code>null</code> | <code>Record</code>&lt;<code>string</code>, <code>RawRouteComponent</code>&gt;</p>',20),l=r('<hr><h3 id="instances" tabindex="-1">instances <a class="header-anchor" href="#instances" aria-hidden="true">#</a></h3><p>\u2022 <strong>instances</strong>: <code>Record</code>&lt;<code>string</code>, <code>undefined</code> | <code>null</code> | <code>ComponentPublicInstance</code>&lt;{}, {}, {}, {}, {}, {}, {}, {}, <code>false</code>, <code>ComponentOptionsBase</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, <code>any</code>, {}&gt;&gt;&gt;</p><p>Mounted route component instances Having the instances on the record mean beforeRouteUpdate and beforeRouteLeave guards can only be invoked with the latest mounted app instance if there are multiple application instances rendering the same view, basically duplicating the content on the page, which shouldn&#39;t happen in practice. It will work if multiple apps are rendering different named views.</p><hr><h3 id="meta" tabindex="-1">meta <a class="header-anchor" href="#meta" aria-hidden="true">#</a></h3><p>\u2022 <strong>meta</strong>: <a href="./RouteMeta.html"><code>RouteMeta</code></a></p>',7),s=e("hr",null,null,-1),h=e("h3",{id:"name",tabindex:"-1"},[o("name "),e("a",{class:"header-anchor",href:"#name","aria-hidden":"true"},"#")],-1),u=e("p",null,[o("\u2022 "),e("strong",null,"name"),o(": "),e("code",null,"undefined"),o(" | "),e("a",{href:"./../#routerecordname"},[e("code",null,"RouteRecordName")])],-1),p=e("hr",null,null,-1),f=e("h3",{id:"path",tabindex:"-1"},[o("path "),e("a",{class:"header-anchor",href:"#path","aria-hidden":"true"},"#")],-1),m=e("p",null,[o("\u2022 "),e("strong",null,"path"),o(": "),e("code",null,"string")],-1),_=e("hr",null,null,-1),g=e("h3",{id:"props",tabindex:"-1"},[o("props "),e("a",{class:"header-anchor",href:"#props","aria-hidden":"true"},"#")],-1),R=e("p",null,[o("\u2022 "),e("strong",null,"props"),o(": "),e("code",null,"Record"),o("<"),e("code",null,"string"),o(", "),e("code",null,"_RouteRecordProps"),o(">")],-1),b=e("hr",null,null,-1),v=e("h3",{id:"redirect",tabindex:"-1"},[o("redirect "),e("a",{class:"header-anchor",href:"#redirect","aria-hidden":"true"},"#")],-1),N=e("p",null,[o("\u2022 "),e("strong",null,"redirect"),o(": "),e("code",null,"undefined"),o(" | "),e("code",null,"RouteRecordRedirectOption")],-1);function T(x,t,y,I,D,w){return a(),d("div",null,[c,e("p",{onInheritDoc:t[0]||(t[0]=()=>{}),"RouteRecordMultipleViews.components":""},null,32),l,e("p",{onInheritDoc:t[1]||(t[1]=()=>{}),"_RouteRecordBase.meta":""},null,32),s,h,u,e("p",{onInheritDoc:t[2]||(t[2]=()=>{}),"_RouteRecordBase.name":""},null,32),p,f,m,e("p",{onInheritDoc:t[3]||(t[3]=()=>{}),"_RouteRecordBase.path":""},null,32),_,g,R,e("p",{onInheritDoc:t[4]||(t[4]=()=>{}),"RouteRecordMultipleViews.props":""},null,32),b,v,N,e("p",{onInheritDoc:t[5]||(t[5]=()=>{}),"_RouteRecordBase.redirect":""},null,32)])}var V=n(i,[["render",T]]);export{P as __pageData,V as default};
